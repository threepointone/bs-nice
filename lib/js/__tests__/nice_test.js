// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Jest    = require("bs-jest/lib/js/src/jest.js");
var Nice    = require("../src/nice.js");
var Block   = require("bs-platform/lib/js/block.js");
var Hashtbl = require("bs-platform/lib/js/hashtbl.js");

function serialized_rule_cache() {
  return Hashtbl.fold((function (k, v, acc) {
                return /* :: */[
                        /* tuple */[
                          k,
                          v
                        ],
                        acc
                      ];
              }), Nice.rule_cache, /* [] */0);
}

function serialized_global_cache() {
  return Hashtbl.fold((function (k, v, acc) {
                return /* :: */[
                        /* tuple */[
                          k,
                          v
                        ],
                        acc
                      ];
              }), Nice.global_cache, /* [] */0);
}

describe("Nice", (function () {
        afterEach(Nice.flush);
        Jest.test("css", (function () {
                return Jest.Expect[/* toMatchSnapshot */16](Jest.Expect[/* expect */0](/* tuple */[
                                Nice.css(/* :: */[
                                      /* Display */Block.__(0, [/* Flex */5]),
                                      /* :: */[
                                        /* Width */Block.__(1, [/* Px */Block.__(0, [23])]),
                                        /* [] */0
                                      ]
                                    ]),
                                serialized_rule_cache(/* () */0)
                              ]));
              }));
        Jest.test("nesting", (function () {
                return Jest.Expect[/* toMatchSnapshot */16](Jest.Expect[/* expect */0](/* tuple */[
                                Nice.css(/* :: */[
                                      /* Display */Block.__(0, [/* Flex */5]),
                                      /* :: */[
                                        /* Color */Block.__(63, [/* Red */119]),
                                        /* :: */[
                                          /* MediaQuery */Block.__(82, [
                                              "screen",
                                              /* :: */[
                                                /* Display */Block.__(0, [/* Block */1]),
                                                /* :: */[
                                                  /* Color */Block.__(63, [/* Green */54]),
                                                  /* :: */[
                                                    /* Select */Block.__(84, [
                                                        ":hover",
                                                        /* :: */[
                                                          /* Color */Block.__(63, [/* Orange */104]),
                                                          /* :: */[
                                                            /* FontWeight */Block.__(67, [/* Bold */1]),
                                                            /* :: */[
                                                              /* Overflow */Block.__(37, [/* Hidden */1]),
                                                              /* :: */[
                                                                /* Supports */Block.__(83, [
                                                                    "(display: flex)",
                                                                    /* :: */[
                                                                      /* Color */Block.__(63, [/* Blue */10]),
                                                                      /* [] */0
                                                                    ]
                                                                  ]),
                                                                /* :: */[
                                                                  /* Select */Block.__(84, [
                                                                      ":active",
                                                                      /* :: */[
                                                                        /* Color */Block.__(63, [/* Red */119]),
                                                                        /* :: */[
                                                                          /* Display */Block.__(0, [/* Block */1]),
                                                                          /* :: */[
                                                                            /* Select */Block.__(84, [
                                                                                ".ie6 &",
                                                                                /* :: */[
                                                                                  /* Color */Block.__(63, [/* Blue */10]),
                                                                                  /* [] */0
                                                                                ]
                                                                              ]),
                                                                            /* [] */0
                                                                          ]
                                                                        ]
                                                                      ]
                                                                    ]),
                                                                  /* [] */0
                                                                ]
                                                              ]
                                                            ]
                                                          ]
                                                        ]
                                                      ]),
                                                    /* [] */0
                                                  ]
                                                ]
                                              ]
                                            ]),
                                          /* [] */0
                                        ]
                                      ]
                                    ]),
                                serialized_rule_cache(/* () */0)
                              ]));
              }));
        Jest.test("global", (function () {
                Nice.$$global("html, body", /* :: */[
                      /* Padding */Block.__(18, [/* Px */Block.__(0, [20])]),
                      /* [] */0
                    ]);
                return Jest.Expect[/* toMatchSnapshot */16](Jest.Expect[/* expect */0](serialized_global_cache(/* () */0)));
              }));
        return Jest.test("splitSelector", (function () {
                      return Jest.Expect[/* toEqual */12](/* array */[
                                    ".a",
                                    " span:hover",
                                    " &:matches(h1, h2, h3, h4)"
                                  ])(Jest.Expect[/* expect */0](Nice.splitSelector(".a, span:hover, &:matches(h1, h2, h3, h4)")));
                    }));
      }));

exports.serialized_rule_cache   = serialized_rule_cache;
exports.serialized_global_cache = serialized_global_cache;
/*  Not a pure module */
